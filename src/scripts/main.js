import { startShuffle } from "./mixing.js"
import { createConfetti, showModal, winObj, loseObj } from "./modal.js"

const win = "üíé"
const lose = "üí©"
let winningCard = Math.floor(Math.random() * (4 - 1))
let gameWasPlayed = false

const cardsArr = [...document.querySelectorAll("[data-card]")]
const startButton = document.querySelector("[data-start]")
const icons = [...document.querySelectorAll("[data-icons]")]
const allIcons = [...document.querySelectorAll("[data-icon]")]
const locking = document.querySelectorAll("[data-locking]")

// –ë–ª–æ–∫–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω –Ω–∞ –≤—Ä–µ–º—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è
const screenLock = () => locking[0].classList.add("locking-active")

function showAllCards() {
  cardsArr.forEach((card) => card.classList.remove("clouse"))
}

function hideAllCards() {
  cardsArr.forEach((card) => card.classList.add("clouse"))
}

// –ü—Ä–∏ –∫–ª–∏–∫–µ ‚Äî —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç—ã (—Ñ–∏–Ω–∞–ª)
cardsArr.forEach((card) => {
  card.addEventListener("click", () => {
    showAllCards()
    if (gameWasPlayed) {
      if (card.children[0].children[1].innerText === win) {
        console.log(win)
        createConfetti()
        showModal(winObj)
      } else {
        showModal(loseObj)
      }
      gameWasPlayed = false
    }
  })
})

showAllCards()

function startGame() {
  hideAllCards()
  screenLock()
  setTimeout(() => {
    startShuffle()
    changeVictoryCard()
  }, 800)
  gameWasPlayed = true
}

// –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç—ã –¥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è lose
function resetAllCards() {
  for (let i = 0; i < allIcons.length; i++) {
    allIcons[i].innerText = lose
  }
}

// –†–∞–Ω–¥–æ–º–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –ø–æ–±–µ–¥–Ω—É—é –∫–∞—Ä—Ç—É
function changeVictoryCard() {
  resetAllCards()

  winningCard = Math.floor(Math.random() * (4 - 1))

  for (let i = 0; i < icons[winningCard].children.length; i++) {
    icons[winningCard].children[i].innerText = win
  }
}

startButton.addEventListener("click", () => startGame())

resetAllCards()
changeVictoryCard()
